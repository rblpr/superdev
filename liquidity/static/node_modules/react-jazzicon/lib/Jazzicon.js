'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function() {
    function defineProperties(target, props) {
        for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
        }
    }
    return function(Constructor, protoProps, staticProps) {
        if (protoProps) defineProperties(Constructor.prototype, protoProps);
        if (staticProps) defineProperties(Constructor, staticProps);
        return Constructor;
    };
}();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _color = require('color');

var _color2 = _interopRequireDefault(_color);

var _mersenneTwister = require('mersenne-twister');

var _mersenneTwister2 = _interopRequireDefault(_mersenneTwister);

var _colors = require('./colors');

var _colors2 = _interopRequireDefault(_colors);

var _Paper = require('./Paper');

var _Paper2 = _interopRequireDefault(_Paper);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}

function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
    }
}

function _possibleConstructorReturn(self, call) {
    if (!self) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }
    return call && (typeof call === "object" || typeof call === "function") ? call : self;
}

function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
        }
    });
    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}

var shapeCount = 4;
var svgns = 'http://www.w3.org/2000/svg';
var wobble = 30;

var Jazzicon = function(_React$PureComponent) {
    _inherits(Jazzicon, _React$PureComponent);

    function Jazzicon() {
        var _ref;

        var _temp, _this, _ret;

        _classCallCheck(this, Jazzicon);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Jazzicon.__proto__ || Object.getPrototypeOf(Jazzicon)).call.apply(_ref, [this].concat(args))), _this), _this.genColor = function(colors) {
            var rand = _this.generator.random();
            var idx = Math.floor(colors.length * _this.generator.random());
            var color = colors.splice(idx, 1)[0];
            return color;
        }, _this.hueShift = function(colors, generator) {
            var amount = generator.random() * 30 - wobble / 2;
            return colors.map(function(hex) {
                var color = (0, _color2.default)(hex);
                color.rotate(amount);
                return color.hexString();
            });
        }, _this.genShape = function(remainingColors, diameter, i, total) {
            var center = diameter / 2;
            var firstRot = _this.generator.random();
            var angle = Math.PI * 2 * firstRot;
            var velocity = diameter / total * _this.generator.random() + i * diameter / total;
            var tx = Math.cos(angle) * velocity;
            var ty = Math.sin(angle) * velocity;
            var translate = 'translate(' + tx + ' ' + ty + ')';

            // Third random is a shape rotation on top of all of that.
            var secondRot = _this.generator.random();
            var rot = firstRot * 360 + secondRot * 180;
            var rotate = 'rotate(' + rot.toFixed(1) + ' ' + center + ' ' + center + ')';
            var transform = translate + ' ' + rotate;
            var fill = _this.genColor(remainingColors);

            return _react2.default.createElement('rect', {
                key: i,
                x: '0',
                y: '0',
                rx: '0',
                ry: '0',
                height: diameter,
                width: diameter,
                transform: transform,
                fill: fill // todo: make prop
            });
        }, _temp), _possibleConstructorReturn(_this, _ret);
    }

    _createClass(Jazzicon, [{
        key: 'render',
        value: function render() {
            var _this2 = this;

            var _props = this.props,
                diameter = _props.diameter,
                paperStyles = _props.paperStyles,
                seed = _props.seed,
                svgStyles = _props.svgStyles;


            this.generator = new _mersenneTwister2.default(seed);

            var remainingColors = this.hueShift(_colors2.default.slice(), this.generator);
            var shapesArr = Array(shapeCount).fill();

            return _react2.default.createElement(
                _Paper2.default, {
                    color: this.genColor(remainingColors),
                    diameter: diameter,
                    style: paperStyles
                },
                _react2.default.createElement(
                    'svg', {
                        xmlns: svgns,
                        x: '0',
                        y: '0',
                        height: diameter,
                        width: diameter,
                        style: svgStyles
                    },
                    shapesArr.map(function(s, i) {
                        return _this2.genShape(remainingColors, diameter, i, shapeCount - 1);
                    })
                )
            );
        }
    }]);

    return Jazzicon;
}(_react2.default.PureComponent);

exports.default = Jazzicon;


Jazzicon.propTypes = {
    diameter: _propTypes2.default.number,
    paperStyles: _propTypes2.default.object,
    seed: _propTypes2.default.number,
    svgStyles: _propTypes2.default.object
};